* Git management related:

** List of files to add, remove and ignore:

*** The commit message:
#+begin_src conf :tangle message.txt
  Minor fixing of full docker repo.
#+end_src

*** Files to add:
#+begin_src conf :tangle git_add.txt
  build_docker.sh
  cuda117_miniconda3/Dockerfile_base
  cuda117_miniconda3/host_prepare.sh
  cuda117_miniconda3/prep_files
  cuda117_miniconda3/README.org
  Dockerfile
  download_anaconda.sh
  full_docker/apt_install_docker.sh
  full_docker/README.org
  full_docker/setup_docker.sh
  get_repo.sh
  .gitignore
  install_apt.sh
  install.sh
  main.org
  nvidia_container_toolkit.org
  README.org
  run_docker.sh
  setup_ctk.sh
  setup_docker.sh
#+end_src

*** Files to remove:
#+begin_src conf :tangle rm.txt
  cuda117_miniconda3/README.org~
  cuda117_miniconda3/.README.org.~undo-tree~
  full_docker/#README.org#
  full_docker/README.org~
  full_docker/.README.org.~undo-tree~
  #main.org#
  .#main.org
  main.org~
  .main.org.~undo-tree~
  nvidia_container_toolkit.org~
  .nvidia_container_toolkit.org.~undo-tree~
  .README.org.~undo-tree~
#+end_src

*** Files to ignore:
#+begin_src conf :tangle .gitignore
  cuda117_miniconda3/prep_files/Dockerfile
  cuda117_miniconda3/prep_files/Miniconda3-latest-Linux-x86_64.sh
  git_add.sh
  git_add.txt
  message.txt
  nvidia_docker_image/
  rm.sh
  rm.txt
  shrc_activate.sh
  shrc_install.sh
  tmp.sh
#+end_src

** The actual scripts to do the dirty work:

*** Files to add:
#+begin_src sh :shebang #!/bin/sh :tangle git_add.sh :results output
  sed "s/^/(git add '/g ; s/\$/');/g" 'git_add.txt' | sh
#+end_src

*** Files to remove:
#+begin_src sh :shebang #!/bin/sh :tangle rm.sh :results output
  sed "s/^/(rm -vf -- '/g ; s/\$/');/g" 'rm.txt' | sh
#+end_src

** Make all the changes and check status:

*** This file stuff:
#+begin_src emacs-lisp :results output
  (save-buffer) 
  (save-some-buffers) 
  (org-babel-tangle)
  (shell-command "./git_add.sh")
  (shell-command "./rm.sh")
#+end_src

#+RESULTS:

*** Run the git management parts:
#+begin_src sh :shebang #!/bin/sh :results output
  git status
#+end_src

#+RESULTS:
#+begin_example
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	modified:   full_docker/README.org
	modified:   full_docker/apt_install_docker.sh
fatal: pathspec 'full_docker/docker_build.sh' did not match any files
fatal: pathspec 'full_docker/git_clone.sh' did not match any files
	new file:   full_docker/setup_docker.sh
	modified:   main.org

#+end_example

** Commit the changes and push:
#+begin_src sh :shebang #!/bin/sh :results output
  git commit -m "$(cat 'message.txt')"
  git push 
#+end_src

#+RESULTS:
: [main bf8741a] Fixed typo 2004 -> 2204
:  3 files changed, 12 insertions(+), 5 deletions(-)
